ewget()
{
  if [ "$#" -eq 0 ]; then
    echo "usage: ewget [source] [destination]"
  elif [ "$#" -eq 1 ]; then
    echo "Kopierar $(ew $1) till $(pwd)..."
    cp $(ew $1) .
  else
    echo "Kopierar $(ew $1) till $(realpath $2)..."
    cp $(ew $1) $2
  fi
}

co2()
{
	DIR=$(pwd)
	WORK_DIR=`mktemp -d -p "$DIR"`
	FILE=$1
	if [[ ! "$WORK_DIR" || ! -d "$WORK_DIR" ]]; then
  	echo "Could not create temp dir"
	fi
	if [ "$#" -ne 2 ]; then
    echo "usage: co2 [file] [revision]"
	else
		cd $WORK_DIR
	  co -r$2 $ZZZ_HOME/sys/RCS/*/$FILE,v
		mv $FILE $DIR/"${FILE%%.*}"_$2."${FILE#*.}"
		cd $DIR
	fi
	#cleanup
	rm -rf "$WORK_DIR"
}

code()
{
	DIR=$(pwd)
	WORK_DIR=`mkdir -p $DIR/.tmp`
	FILE=$1

	if [ "$#" -ne 1 ]; then
    echo "usage: code [file]"
	else
		ewget $1 $DIR/.tmp/
	fi
}


rlog2()
{
	if [ "$#" -ne 1 ]; then
	  echo "usage: rlog2 [file]"
	else
		rlog $ZZZ_HOME/sys/RCS/*/$1,v | more
	fi
}

deleted()
{
	# Argument $1: komponentnamn
	if [ "$#" -ne 1 ]; then
	  echo "usage: deleted [component name]"
		return 0
	fi

	if  rlog2 $1 | grep -Fxq "Component deleted"; then
			echo -e "$1 �r deletemarkerad."
	else
			echo -e "$1 �r inte deletemarkerad."
	fi
	return 0
}

trimrep()
{
	export TERM=vt220
	/opt/ess/tools/trim/trim5525a59v06/bin/trimrep
	export TERM=xterm
}

moverun()
{
	echo "Flyttar runfiler till ~/runlib/"
	mv *.run ~/runlib/
	chmod 777 ~/runlib/*.run
	echo "Filer i runbiblioteket:"
	ls ~/runlib/
}

clearrun()
{
	echo "Rensar ~/runlib/"
	rm ~/runlib/*.run
}

searchall()
{
if [ -z "$1" ]; then
        echo This script is called with ${FUNCNAME[0]}  "searchstring"
        return 1
elif [ -z "$MENUID" ]; then
	echo Please enter an enviroment, for example chengrw
	return 1
fi

readonly folder=/opt/ess/ehda/ZZZ/$MENUID/MASTER/menuidrel/NORMAL/src
readonly xfolder=/opt/ess/ehda/ZZZ/$MENUID/MASTER/menuidrel/stdrel/NORMAL/src


for pname in $(ls $folder)
do
        if grep -q $1 $folder/$pname; then
                echo $MENUID: $pname
        fi
done

for pname in $(ls $xfolder)
do
        if grep -q $1 $xfolder/$pname; then
                echo STD: $pname
	fi
done
}
